{{#
  Macro to help finding files in the system, uses the unix program 'find' to look for files
  and directories. Returns pass if it finds no files matching the find criteria. If it finds
  files then it returns fail.

  :param find_parameters: Parameters that will be passed to the find command
  :param fail_message: Message printed to the output when the test fails
  :param find_type: Find type, either file or directory. options: '-type f' or '-type d'
#}}
{{% macro find_command(find_parameters, fail_message, find_type="-type f") %}}
#!/bin/bash

# Get filesystems mounted with 'nodev' option
filter_nodev=$(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,)

# Find all mounted partitions, excluding those with 'nodev'
readarray -t partitions < <(findmnt -n -l -k -it "${filter_nodev}" | awk '{ print $1 }')

# Ensure /tmp is also checked when tmpfs is used.
if grep -Pq "^tmpfs\\h+/tmp" /proc/mounts; then
    partitions+=("/tmp")
fi

# Loop through each partition and find files based on provided type and permissions
for partition in "${partitions[@]}"; do
    # The find command uses the parametrized find_parameters
    files=$(find "${partition}" -xdev {{{ find_type }}} {{{ find_parameters }}})
    if [[ -n "${files}" ]]; then
        echo -e "{{{ fail_message }}}:\n${files}"
        exit "${XCCDF_RESULT_FAIL}"
    fi
done

exit "${XCCDF_RESULT_PASS}"
{{% endmacro %}}

{{#
  Macro to help finding files in the system, uses the unix program 'find'.
  Returns pass if it finds no files matching the find criteria. If it finds
  files then it returns fail.

  :param find_parameters: Parameters that will be passed to the find command
  :param fail_message: Message printed to the output when the test fails
#}}
{{% macro find_files(find_parameters, fail_message) %}}
{{{ find_command(find_parameters, fail_message, find_type="-type f") }}}
{{% endmacro %}}

{{#
  Macro to help finding directories in the system, uses the unix program 'find'.
  Returns pass if it finds no directories matching the find criteria. If it finds
  directories then it returns fail.

  :param find_parameters: Parameters that will be passed to the find command
  :param fail_message: Message printed to the output when the test fails
#}}
{{% macro find_directories(find_parameters, fail_message) %}}
{{{ find_command(find_parameters, fail_message, find_type="-type d") }}}
{{% endmacro %}}
